{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "found",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "founders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x24952f5ed3cd2c5b5eb9e34abac8080149de6ab30ff95f35f6c1480171607b36",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "744295",
    "logsBloom": "0x
    "blockHash": "0xdfc10b39a587239798372d93061f3913e5ab475eac95a81b489c954cc04f450c",
    "transactionHash": "0x24952f5ed3cd2c5b5eb9e34abac8080149de6ab30ff95f35f6c1480171607b36",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "744295",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d445ae68f394a31f3a2e7405db83e97d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"found\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"founders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FoundMe.sol\":\"FoundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FoundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FoundMe {\\n    using PriceConverter for uint;\\n\\n    address immutable i_owner;\\n    address immutable i_priceFeed;\\n\\n    uint constant MIN_USD = 50 * 1e18;\\n    address[] public founders;\\n    mapping(address => uint) public addressToAmount;\\n\\n    constructor(address priceFeed) {\\n        i_owner = msg.sender;\\n        i_priceFeed = priceFeed;\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Not owner\\\");\\n        _;\\n    }\\n\\n    function found() public payable {\\n        require(\\n            msg.value.toUsd(i_priceFeed) >= MIN_USD,\\n            \\\"Didn't send enough ETH\\\"\\n        );\\n        founders.push(msg.sender);\\n        addressToAmount[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (uint i = 0; i < founders.length; i++) {\\n            addressToAmount[founders[i]] = 0;\\n        }\\n        founders = new address[](0);\\n\\n        // Call returns a boolean value indicating success or failure.\\n        // This is the current recommended method to use.\\n        (bool sent, ) = payable(msg.sender).call{value: address(this).balance}(\\n            \\\"\\\"\\n        );\\n        require(sent, \\\"Failed to send Ether\\\");\\n    }\\n\\n    receive() external payable {\\n        found();\\n    }\\n\\n    fallback() external payable {\\n        found();\\n    }\\n}\\n\",\"keccak256\":\"0x2d5c025524435bf5406915ea6ce41f32952da12e61c507e6024fbb036b22f780\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(address _priceFeed) internal view returns (uint) {\\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(_priceFeed);\\n        (, int price, , , ) = priceFeed.latestRoundData();\\n        return uint(price * 1e10);\\n    }\\n\\n    function toUsd(uint ethAmount, address priceFeed)\\n        internal\\n        view\\n        returns (uint)\\n    {\\n        return (getPrice(priceFeed) * ethAmount) / 1e18;\\n    }\\n}\\n\",\"keccak256\":\"0x3e7d1af944fdda08d02d24b0af7638de7f8956c57c06af920f89417000cc8cda\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610dd1380380610dd183398181016040528101906100329190610103565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050610130565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d0826100a5565b9050919050565b6100e0816100c5565b81146100eb57600080fd5b50565b6000815190506100fd816100d7565b92915050565b600060208284031215610119576101186100a0565b5b6000610127848285016100ee565b91505092915050565b60805160a051610c7c61015560003960006101060152600061024a0152610c7c6000f3fe6080604052600436106100435760003560e01c80633c7e7d281461005c5780633ccfd60b146100995780633d750b28146100b0578063d8e75f62146100ba57610052565b36610052576100506100f7565b005b61005a6100f7565b005b34801561006857600080fd5b50610083600480360381019061007e919061069c565b610230565b60405161009091906106e2565b60405180910390f35b3480156100a557600080fd5b506100ae610248565b005b6100b86100f7565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610729565b61048b565b6040516100ee9190610765565b60405180910390f35b6802b5e3af16b18800006101347f0000000000000000000000000000000000000000000000000000000000000000346104ca90919063ffffffff16565b1015610175576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016c906107dd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610227919061082c565b92505081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd906108ac565b60405180910390fd5b60005b60008054905081101561037b576000600160008084815481106102ff576102fe6108cc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080610373906108fb565b9150506102d9565b50600067ffffffffffffffff81111561039757610396610943565b5b6040519080825280602002602001820160405280156103c55781602001602082028036833780820191505090505b50600090805190602001906103db929190610592565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610402906109a3565b60006040518083038185875af1925050503d806000811461043f576040519150601f19603f3d011682016040523d82523d6000602084013e610444565b606091505b5050905080610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90610a04565b60405180910390fd5b50565b6000818154811061049b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a7640000836104df846104fb565b6104e99190610a24565b6104f39190610a95565b905092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610b53565b5050509150506402540be400816105899190610bce565b92505050919050565b82805482825590600052602060002090810192821561060b579160200282015b8281111561060a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105b2565b5b509050610618919061061c565b5090565b5b8082111561063557600081600090555060010161061d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106698261063e565b9050919050565b6106798161065e565b811461068457600080fd5b50565b60008135905061069681610670565b92915050565b6000602082840312156106b2576106b1610639565b5b60006106c084828501610687565b91505092915050565b6000819050919050565b6106dc816106c9565b82525050565b60006020820190506106f760008301846106d3565b92915050565b610706816106c9565b811461071157600080fd5b50565b600081359050610723816106fd565b92915050565b60006020828403121561073f5761073e610639565b5b600061074d84828501610714565b91505092915050565b61075f8161065e565b82525050565b600060208201905061077a6000830184610756565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b60006107c7601683610780565b91506107d282610791565b602082019050919050565b600060208201905081810360008301526107f6816107ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610837826106c9565b9150610842836106c9565b925082820190508082111561085a576108596107fd565b5b92915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000610896600983610780565b91506108a182610860565b602082019050919050565b600060208201905081810360008301526108c581610889565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610906826106c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610938576109376107fd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061098d600083610972565b91506109988261097d565b600082019050919050565b60006109ae82610980565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006109ee601483610780565b91506109f9826109b8565b602082019050919050565b60006020820190508181036000830152610a1d816109e1565b9050919050565b6000610a2f826106c9565b9150610a3a836106c9565b9250828202610a48816106c9565b91508282048414831517610a5f57610a5e6107fd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610aa0826106c9565b9150610aab836106c9565b925082610abb57610aba610a66565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ae581610ac6565b8114610af057600080fd5b50565b600081519050610b0281610adc565b92915050565b6000819050919050565b610b1b81610b08565b8114610b2657600080fd5b50565b600081519050610b3881610b12565b92915050565b600081519050610b4d816106fd565b92915050565b600080600080600060a08688031215610b6f57610b6e610639565b5b6000610b7d88828901610af3565b9550506020610b8e88828901610b29565b9450506040610b9f88828901610b3e565b9350506060610bb088828901610b3e565b9250506080610bc188828901610af3565b9150509295509295909350565b6000610bd982610b08565b9150610be483610b08565b9250828202610bf281610b08565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c2a57610c296107fd565b5b8282058414831517610c3f57610c3e6107fd565b5b509291505056fea2646970667358221220d931d99ee35f6ca340a9661591309f0a1925b070d9f5b1819035f55ab4daf5ef64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100435760003560e01c80633c7e7d281461005c5780633ccfd60b146100995780633d750b28146100b0578063d8e75f62146100ba57610052565b36610052576100506100f7565b005b61005a6100f7565b005b34801561006857600080fd5b50610083600480360381019061007e919061069c565b610230565b60405161009091906106e2565b60405180910390f35b3480156100a557600080fd5b506100ae610248565b005b6100b86100f7565b005b3480156100c657600080fd5b506100e160048036038101906100dc9190610729565b61048b565b6040516100ee9190610765565b60405180910390f35b6802b5e3af16b18800006101347f0000000000000000000000000000000000000000000000000000000000000000346104ca90919063ffffffff16565b1015610175576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016c906107dd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610227919061082c565b92505081905550565b60016020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd906108ac565b60405180910390fd5b60005b60008054905081101561037b576000600160008084815481106102ff576102fe6108cc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508080610373906108fb565b9150506102d9565b50600067ffffffffffffffff81111561039757610396610943565b5b6040519080825280602002602001820160405280156103c55781602001602082028036833780820191505090505b50600090805190602001906103db929190610592565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610402906109a3565b60006040518083038185875af1925050503d806000811461043f576040519150601f19603f3d011682016040523d82523d6000602084013e610444565b606091505b5050905080610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90610a04565b60405180910390fd5b50565b6000818154811061049b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000670de0b6b3a7640000836104df846104fb565b6104e99190610a24565b6104f39190610a95565b905092915050565b60008082905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610b53565b5050509150506402540be400816105899190610bce565b92505050919050565b82805482825590600052602060002090810192821561060b579160200282015b8281111561060a5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105b2565b5b509050610618919061061c565b5090565b5b8082111561063557600081600090555060010161061d565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106698261063e565b9050919050565b6106798161065e565b811461068457600080fd5b50565b60008135905061069681610670565b92915050565b6000602082840312156106b2576106b1610639565b5b60006106c084828501610687565b91505092915050565b6000819050919050565b6106dc816106c9565b82525050565b60006020820190506106f760008301846106d3565b92915050565b610706816106c9565b811461071157600080fd5b50565b600081359050610723816106fd565b92915050565b60006020828403121561073f5761073e610639565b5b600061074d84828501610714565b91505092915050565b61075f8161065e565b82525050565b600060208201905061077a6000830184610756565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682045544800000000000000000000600082015250565b60006107c7601683610780565b91506107d282610791565b602082019050919050565b600060208201905081810360008301526107f6816107ba565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610837826106c9565b9150610842836106c9565b925082820190508082111561085a576108596107fd565b5b92915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000610896600983610780565b91506108a182610860565b602082019050919050565b600060208201905081810360008301526108c581610889565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610906826106c9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610938576109376107fd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061098d600083610972565b91506109988261097d565b600082019050919050565b60006109ae82610980565b9150819050919050565b7f4661696c656420746f2073656e64204574686572000000000000000000000000600082015250565b60006109ee601483610780565b91506109f9826109b8565b602082019050919050565b60006020820190508181036000830152610a1d816109e1565b9050919050565b6000610a2f826106c9565b9150610a3a836106c9565b9250828202610a48816106c9565b91508282048414831517610a5f57610a5e6107fd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610aa0826106c9565b9150610aab836106c9565b925082610abb57610aba610a66565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ae581610ac6565b8114610af057600080fd5b50565b600081519050610b0281610adc565b92915050565b6000819050919050565b610b1b81610b08565b8114610b2657600080fd5b50565b600081519050610b3881610b12565b92915050565b600081519050610b4d816106fd565b92915050565b600080600080600060a08688031215610b6f57610b6e610639565b5b6000610b7d88828901610af3565b9550506020610b8e88828901610b29565b9450506040610b9f88828901610b3e565b9350506060610bb088828901610b3e565b9250506080610bc188828901610af3565b9150509295509295909350565b6000610bd982610b08565b9150610be483610b08565b9250828202610bf281610b08565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610c2a57610c296107fd565b5b8282058414831517610c3f57610c3e6107fd565b5b509291505056fea2646970667358221220d931d99ee35f6ca340a9661591309f0a1925b070d9f5b1819035f55ab4daf5ef64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FoundMe.sol:FoundMe",
        "label": "founders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FoundMe.sol:FoundMe",
        "label": "addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}